services:

  rating-command-service:
    build: ./rating-command-service
    container_name: rating-command-service
    ports:
      - 8080:8080
    restart: no
    volumes:
      - ./rating-command-service:/rating-command-service
    networks:
      - dev
    depends_on:
      - postgres

  rating-query-service:
    build: ./rating-query-service
    container_name: rating-query-service
    ports:
      - 8081:8081
    restart: no
    volumes:
      - ./rating-query-service:/rating-query-service
    networks:
      - dev
    depends_on:
      - elasticsearch

  postgres:
    image: debezium/postgres:17-alpine
    container_name: postgres
    ports:
      - 5432:5432
    restart: no
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rating-command-service
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=4"
      - "-c"
      - "max_wal_senders=4"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - dev

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - dev

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.5
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    networks:
      - dev

  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:latest
    depends_on:
      - kafka
      - postgres
      - elasticsearch
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars,/etc/kafka-connect/jars
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install debezium/debezium-connector-postgresql:latest --no-prompt
        confluent-hub install confluentinc/kafka-connect-elasticsearch:latest --no-prompt
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
    networks:
      - dev

volumes:

  postgres:

networks:

  dev:
    driver: bridge
